{
    "messages": [
        {
            "role": "system",
            "content": "Train on this CSV, --start training here-- {csv_content} --end training here---"
        },
        {
            "role": "user",
            "content": "\n                        Take the role of a recomendation system,\n                        You will be prompted with queries for products, in natural language.\n                        Using the csv you trained on, recommend related products. so when you get a query like \"search term '<whatever the user searches for>'\",\n                        e.g \"search term '9 inch nails'\",give a json response in this format, a list of max 50 matching items.:\n\n                        [\n                            {\n                            \"product_uid\":\"{the product uid}\",\n                            \"product_name\":\"{the product name}\",\n                            \"product_description\":\"{the product description}\",\n                            \"product_image_url\":\"{product name}\",\n                            \"product_image_visual_description\": \"visual description of the image, you can try loading the image, then try describing it\"m\n                            \"search_relevance_score\": \"<the score, guess the score based on the relevance of the search result>\",\n                            \"reason_for_recommendaion\": \"<the reason for commending this product for the given search query>\",\n                            \"related_items\": [\n                                <5 related items similar in structure to this parent item, related contecxtually baed on relevance, or product name or descripion, processed with natural language. They should not have the \"related_items\" property so we don't do nesting>\n                                ]\n                            },\n                            ... other matches ...\n                        ]\n\n                        And that's it. No verbose answers, just the json response.\n\n                        Remember, no verbose response, just the list fo matchign items, and 5 related items based on context, and relevance\n\n                        Also learn from subsequent queries, and reorder the items in your query result, based on how often they're queried or how relevant they are\n                        "
        },
        {
            "role": "assistant",
            "content": "I see you provided a CSV file containing home depo products, I'm ready, let's give it a test run, query me."
        }
    ]
}